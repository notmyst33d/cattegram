mod tokenizer;
mod compiler;
mod parser;

use crate::tokenizer::tokenize;
use crate::parser::parse;
use crate::compiler::compile_reader;

fn main() -> std::io::Result<()> {
    let tokens = tokenize(std::fs::read_to_string("schema.tl")?);
    let definitions = parse(tokens);
    let mut code = String::new();

    code += "// This is a file generated by cattlc, do not modify unless you know what you are doing.\n\n";
    code += "#include <cattl.h>\n\n";
    for definition in definitions {
        code += &compile_reader(&definition);
        code += "\n\n";
    }

    std::fs::write("schema.gen.c", code)?;
    Ok(())
}
